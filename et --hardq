[1mdiff --git a/Controller/ESP8266J/ESP8266/ESP8266.ino b/Controller/ESP8266J/ESP8266/ESP8266.ino[m
[1mdeleted file mode 100644[m
[1mindex 33a73f6..0000000[m
[1m--- a/Controller/ESP8266J/ESP8266/ESP8266.ino[m
[1m+++ /dev/null[m
[36m@@ -1,84 +0,0 @@[m
[31m-#include <ESP8266WiFi.h>[m
[31m-#include <ESP8266HTTPClient.h>[m
[31m-[m
[31m-// TODO:[m
[31m-// Need to convert the ESP8266 into a passthrough card for the Arduino[m
[31m-// Communication both ways via Serial[m
[31m-// An escape character should be used to allow commands to be sent amongst the data transmission[m
[31m-// Arduino should be able to change the wifi SSID and password, as well as know the status of the wifi[m
[31m-[m
[31m-[m
[31m-// This file includes the connection info for the Arduino, but it is not included in the GitHub source[m
[31m-// This is to allow different developers with different local wifi networks to setup the project accordingly[m
[31m-// To create this file, make a copy of "connection_info_template.h.txt" and rename it to "connection_info.h"[m
[31m-// Within the copy, fill out the information as desired[m
[31m-#include "connection_info.h"[m
[31m-[m
[31m-// Get connection info from macros in related file[m
[31m-const char*    wifiSSID        = WIFI_SSID;[m
[31m-const char*    wifiPassword    = WIFI_PASSWORD;[m
[31m-const char*    databaseAddress = DATABASE_ADDRESS;[m
[31m-const uint16_t databasePort    = DATABASE_PORT;[m
[31m-const char* serverName = API_ADDRESS;[m
[31m-[m
[31m-unsigned long lastTime = 0;[m
[31m-// Timer set to 10 minutes (600000)[m
[31m-//unsigned long timerDelay = 600000;[m
[31m-// Set timer to 5 seconds (5000)[m
[31m-unsigned long timerDelay = 5000;[m
[31m-[m
[31m-// Runs once at Arduino power-up[m
[31m-// This function is used to setup all data before loop() is called[m
[31m-void setup() {[m
[31m-[m
[31m-  // Open a serial connection to the Arduino chip[m
[31m-  // Set timeout used with readStringUntil()[m
[31m-  Serial.begin(9600);[m
[31m-  Serial.setTimeout(5000);[m
[31m-[m
[31m-  /* Explicitly set the ESP8266 to be a WiFi-client, otherwise, it by default,[m
[31m-     would try to act as both a client and an access-point and could cause[m
[31m-     network-issues with your other WiFi-devices on your WiFi-network. */[m
[31m-  WiFi.mode(WIFI_STA);[m
[31m-[m
[31m-  // Setup the wifi connection to the local network[m
[31m-  Serial.println();[m
[31m-  Serial.print("connecting...");[m
[31m-  WiFi.begin(wifiSSID, wifiPassword);[m
[31m-  while (WiFi.status() != WL_CONNECTED) {[m
[31m-    delay(500);[m
[31m-    Serial.print(".");[m
[31m-  }[m
[31m-  Serial.println("connected");[m
[31m-}[m
[31m-[m
[31m-// Runs repeatedly once the Arduino has finished startup[m
[31m-// This function will only run after setup() has completed[m
[31m-void loop() {[m
[31m-[m
[31m-  // Get next string to send[m
[31m-  //String message = Serial.readStringUntil(0);[m
[31m-  //if (message.length() > 0) {[m
[31m-  if ((millis() - lastTime) > timerDelay) {[m
[31m-    HTTPClient http;[m
[31m-    WiFiClient client;[m
[31m-      // Your Domain name with URL path or IP address with path[m
[31m-    http.begin(client, serverName);[m
[31m-    // Use WiFiClient class to create TCP connection[m
[31m-[m
[31m-    [m
[31m-    // Specify content-type header[m
[31m-    http.addHeader("Content-Type", "application/json");         [m
[31m-    // Send HTTP POST request[m
[31m-    int httpResponseCode = http.POST("{\"Id\":\"8\",\"Value\":\"24.25\",\"ReadDate\":\"2005-09-01T13:00:00\"}");[m
[31m-    [m
[31m-[m
[31m-    Serial.print("HTTP Response code: ");[m
[31m-    Serial.println(httpResponseCode);[m
[31m-      [m
[31m-    // Free resources[m
[31m-    http.end();[m
[31m-  //}[m
[31m-  }[m
[31m-  lastTime = millis();[m
[31m-}[m
[1mdiff --git a/Controller/ESP8266J/ESP8266/connection_info_template.h.txt b/Controller/ESP8266J/ESP8266/connection_info_template.h.txt[m
[1mdeleted file mode 100644[m
[1mindex d464caf..0000000[m
[1m--- a/Controller/ESP8266J/ESP8266/connection_info_template.h.txt[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-#ifndef CONNECTION_INFO_H[m
[31m-#define CONNECTION_INFO_H[m
[31m-[m
[31m-// The name and password of the wifi network which the Arduino should connect to[m
[31m-#define WIFI_SSID "TelstraD13601"[m
[31m-#define WIFI_PASSWORD  "hftrjwfh43"[m
[31m-[m
[31m-// The address and port number of the server to send data to[m
[31m-#define DATABASE_ADDRESS = 192.168.0.156[m
[31m-#define DATABASE_PORT = 44393[m
[31m-[m
[31m-#endif[m
